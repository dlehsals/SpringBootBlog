package com.berry.blog.service;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.berry.blog.model.RoleType;
import com.berry.blog.model.User;
import com.berry.blog.repository.UserRepository;

//스프링이 컴포넌트 스캔을 통해서 bean객체로 등록해줌(IoC)
@Service
public class UserService {
	
	@Autowired
	private UserRepository userRepository;
	
	/*
	 * @Autowired private BCryptPasswordEncoder encoder;
	 */
	
	@Transactional  
	public void 회원가입(User user) {
		userRepository.save(user);
	}
	
	@Transactional(readOnly = true)
	public User 로그인(User user) {
		return userRepository.findByUsernameAndUserpassword(user.getUsername(), user.getUserpassword());
	}
	
	@Transactional
	public void 회원수정(User user, HttpSession session) {
		User persistance = userRepository.findById(user.getId()).orElseThrow(()->{
			return new IllegalArgumentException("회원찾기 실패 : 회원을 찾을 수 없습니다.");
		});
		persistance.setUserpassword(user.getUserpassword());
		persistance.setEmail(user.getEmail());
		session.setAttribute("userpassword", persistance.getUserpassword());
		session.setAttribute("email", persistance.getEmail());
	}
}

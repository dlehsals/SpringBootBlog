package com.berry.blog.service;

import java.util.List;
import java.util.function.Supplier;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.berry.blog.model.Board;
import com.berry.blog.model.Reply;
import com.berry.blog.repository.BoardRepository;
import com.berry.blog.repository.ReplyRepository;

//스프링이 컴포넌트 스캔을 통해서 bean객체로 등록해줌(IoC)
@Service
public class BoardService {
	
	@Autowired
	private BoardRepository boardRepository;
	
	@Autowired
	private ReplyRepository replyRepository;
	
	@Transactional
	public void 글쓰기(Board board) {
		board.setCount(0);
		System.out.println("userId : " + board.getUserId());
		boardRepository.save(board);
	}
	
	public Page<Board> 글목록(Pageable pageable){
		return boardRepository.findAll(pageable);
	}
	
	public Board 글상세보기(int id) {
		return boardRepository.findById(id)
				.orElseThrow(()->{
			return new IllegalArgumentException("글 상세보기 실패 : 게시글을 찾을 수 없습니다.");
		});
	}
	
	@Transactional
	public void 삭제하기(int id) {
		boardRepository.deleteById(id);
	}
	
	@Transactional
	public void 수정하기(int id, Board reqBoard) {
		Board board = boardRepository.findById(id)
				.orElseThrow(()->{
					return new IllegalArgumentException("글 수정 실패 : 게시글을 찾을 수 없습니다.");
				});
		board.setTitle(reqBoard.getTitle());
		board.setContent(reqBoard.getContent());
	}
	
	@Transactional
	public void 댓글쓰기(int boardId, Reply reqReply) {
		Board board = boardRepository.findById(boardId)
				.orElseThrow(()->{
					return new IllegalArgumentException("댓글 쓰기 실패 : 게시글 ID를 찾을 수 없습니다.");
				});
		reqReply.setBoard(board);
		replyRepository.save(reqReply);
	}
	
}
